<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on NetWithAlex</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on NetWithAlex</description>
    <generator>Hugo -- 0.140.2</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 05 Jan 2025 14:20:31 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enhanced Application Aware Routing</title>
      <link>http://localhost:1313/enhanced-aar/</link>
      <pubDate>Sun, 05 Jan 2025 14:20:31 +0000</pubDate>
      <guid>http://localhost:1313/enhanced-aar/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;In my previous &lt;a href=&#34;http://localhost:1313/demystifying-aar-1-3-the-foundations&#34;&gt;series of posts&lt;/a&gt;, I talked in depth about Application Aware Routing (AAR), a technology used to direct traffic through best performing paths. AAR is a core functionality of SD-WAN and has been around for years. Naturally, new ideas to improve it came around and gave birth to a revamped implementation which Cisco called &lt;strong&gt;&lt;em&gt;Enhanced&lt;/em&gt;&lt;/strong&gt; Application Aware Routing (EAAR). Let´s take a look to it.&lt;/p&gt;
&lt;h3 id=&#34;aar-limitations&#34;&gt;AAR Limitations&lt;/h3&gt;
&lt;p&gt;Before diving into EAAR, let&amp;rsquo;s understand why it was created.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Improving my SD-WAN Assistant - Multiple agents</title>
      <link>http://localhost:1313/improving-my-sd-wan-assistant-multiple-agents/</link>
      <pubDate>Sun, 28 Jul 2024 14:56:45 +0000</pubDate>
      <guid>http://localhost:1313/improving-my-sd-wan-assistant-multiple-agents/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In my &lt;a href=&#34;http://localhost:1313/building-my-first-sd-wan-ai-assistant-with-langchain/&#34;&gt;last post&lt;/a&gt;, I created a Cisco SD-WAN assistant to help me run NWPI traces and troubleshoot the network. The interaction with the assistant required the user to answer questions until receiving information about a particular flow and potential problems. In this post my goal is to use multiple agents and see if I can get to the same conclusion with less human interaction. Repository can be found &lt;a href=&#34;https://github.com/aruiz-p/sdwan-langgraph&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;To achieve this, I will use &lt;a href=&#34;https://langchain-ai.github.io/langgraph/&#34;&gt;LangGraph&lt;/a&gt; officially defined as:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building my first SD-WAN AI Assistant with LangChain</title>
      <link>http://localhost:1313/building-my-first-sd-wan-ai-assistant-with-langchain/</link>
      <pubDate>Wed, 10 Jul 2024 18:51:08 +0000</pubDate>
      <guid>http://localhost:1313/building-my-first-sd-wan-ai-assistant-with-langchain/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;It has been a while since I wanted to hop on to the LLM train and learn how to use one of the popular frameworks. A few months back, I saw a great &lt;a href=&#34;https://www.ciscolive.com/on-demand/on-demand-library.html?search=jesus&amp;amp;search=jesus#/session/1707505627331001pilj&#34;&gt;Cisco Live presentation&lt;/a&gt; by my good friend Jesus, and it gave me the determination I needed to finally dive deeper into the topic.&lt;/p&gt;
&lt;p&gt;Since then, I have been doing research and thinking about a nice use case for me to put as objective of my learning process. After considering different options, I decided to build an SD-WAN AI assistant that could help me troubleshoot an SD-WAN issue. Taking advantage of the available tools, I decided that my assistant would be an expert on the &lt;a href=&#34;http://localhost:1313/network-wide-path-insights-an-introduction/&#34;&gt;Net&lt;/a&gt; &lt;a href=&#34;http://localhost:1313/network-wide-path-insights-an-introduction/&#34;&gt;work Wide Path Insights&lt;/a&gt; functionality.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible Notes</title>
      <link>http://localhost:1313/ansible-notes/</link>
      <pubDate>Sun, 19 May 2024 13:49:53 +0000</pubDate>
      <guid>http://localhost:1313/ansible-notes/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/study-devops-blueprint/&#34;&gt;&lt;em&gt;This post is part of DEVNET DevOps (300-910) – Blueprint&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ansible is an open-source automation tool used for configuration management, application deployment and task automation. Although it can be used for a lot of purposes, we are particularly interested on network automation related tasks.&lt;/p&gt;
&lt;p&gt;There are a lot of resources to learn Ansible online, these notes should serve only as guidance, but you are encouraged to go deeper at your own pace.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker - Safety practices</title>
      <link>http://localhost:1313/docker-safety-practices/</link>
      <pubDate>Sun, 21 Apr 2024 12:49:34 +0000</pubDate>
      <guid>http://localhost:1313/docker-safety-practices/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Docker helps with packaging, distributing, and running applications. However, we should be responsible so we can ensure the security of the Docker environment. There are some best practices and strategies we can follow to achieve this objective.&lt;/p&gt;
&lt;h2 id=&#34;security-best-practices-and-strategies&#34;&gt;Security best practices and strategies&lt;/h2&gt;
&lt;h3 id=&#34;no-sensitive-information-on-files&#34;&gt;No sensitive information on files&lt;/h3&gt;
&lt;p&gt;Dockerfiles are used to define the steps needed to build Docker images. It&amp;rsquo;s crucial to avoid including sensitive information such as credentials, API keys, or other secrets directly in Dockerfiles. Keep in mind these files are often version-controlled and may be accessible to unauthorized users, resulting in a significant security risk.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CI/CD Deployment Strategies</title>
      <link>http://localhost:1313/ci-cd-deployment-strategies/</link>
      <pubDate>Sun, 21 Apr 2024 12:03:50 +0000</pubDate>
      <guid>http://localhost:1313/ci-cd-deployment-strategies/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In the CI/CD world, Deploying updates efficiently and with minimal disruption is crucial. There are different release deployment strategies that organization can adopt including &lt;strong&gt;&lt;em&gt;Big-Bang, Rolling, Blue-Green, and Canary.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;deployment-option&#34;&gt;Deployment Option&lt;/h2&gt;
&lt;h3 id=&#34;big-bang-deployment&#34;&gt;Big Bang Deployment&lt;/h3&gt;
&lt;p&gt;All changes are bundled together and deployed at once - this is the essence of Big Bang Deployment. While it simplifies the deployment process, as everything is pushed out simultaneously, it also poses &lt;em&gt;&lt;strong&gt;significant risks&lt;/strong&gt;&lt;/em&gt;. If any issues arise during deployment, they affect the entire system immediately, potentially leading to widespread downtime or malfunctions. Best suited for smaller projects or those with low complexity where the impact of failures is minimal.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Golden Images</title>
      <link>http://localhost:1313/docker-golden-images/</link>
      <pubDate>Sat, 06 Apr 2024 10:45:40 +0000</pubDate>
      <guid>http://localhost:1313/docker-golden-images/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;The concept of golden image refers to an image that has been extensively tested and verified its fully operational. Following the same logic, an image that has not been tested or verified should not be considered a golden image. Organizations need to define the process to follow to mark an image as &lt;strong&gt;golden&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The process should include testing and verification methodologies. Also, from a security standpoint patches should be present and if there are external dependencies, it&amp;rsquo;s crucial to update them to their respective recommended versions.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dockerfile</title>
      <link>http://localhost:1313/dockerfile/</link>
      <pubDate>Sat, 06 Apr 2024 08:47:03 +0000</pubDate>
      <guid>http://localhost:1313/dockerfile/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Docker can build images automatically by reading the instructions from a Dockerfile. A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. This page describes the commands you can use in a Dockerfile.&lt;/p&gt;
&lt;p&gt;Docker runs instructions in a Dockerfile in order. A Dockerfile &lt;strong&gt;must begin with a FROM instruction&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# Use the official Python image as the base image
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM python:3.9-slim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# Set the working directory inside the container
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WORKDIR /app
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# Copy the Python script from the host machine into the container
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COPY my_script.py .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# Run the Python script when the container starts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CMD [&amp;#34;python&amp;#34;, &amp;#34;my_script.py&amp;#34;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;FROM python:3.9-slim&lt;/code&gt; : Specifies that our image will be based on the official Python image with version 3.9, using the slim variant.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WORKDIR /app&lt;/code&gt; : Sets the working directory inside the container to &lt;code&gt;/app&lt;/code&gt;. Later instructions will be executed in this directory.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;COPY my_script.py .&lt;/code&gt; : Copies a file named &lt;code&gt;my_script.py&lt;/code&gt; from the host machine into the &lt;code&gt;/app&lt;/code&gt; directory of the container. The &lt;code&gt;.&lt;/code&gt; refers to the current directory in the Docker context, which will typically be the directory containing the Dockerfile.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CMD [&amp;quot;python&amp;quot;, &amp;quot;my_script.py&amp;quot;]&lt;/code&gt; : Specifies the default command to run when a container based on this image starts. In this case, it runs the Python interpreter ( &lt;code&gt;python&lt;/code&gt;) with the &lt;code&gt;my_script.py&lt;/code&gt; script as an argument.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;table-of-instructions&#34;&gt;&lt;strong&gt;Table of Instructions&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;FROM
ENV
COPY
EXPOSE
ADD
WORKDIR
RUN
LABEL
CMD&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tracking SD-WAN incidents with Service Now</title>
      <link>http://localhost:1313/tracking-sd-wan-incidents-with-service-now/</link>
      <pubDate>Fri, 15 Mar 2024 18:06:34 +0000</pubDate>
      <guid>http://localhost:1313/tracking-sd-wan-incidents-with-service-now/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;As networks evolve to provide better user experience and new technologies to manage the network are introduced, maintaining everything running smoothly has become increasingly difficult. One of the critical responsibilities of the operations team is tracking problems happening all over the network. Identifying them is just the beginning, then they need to be logged and driven to resolution. Multiply the amount of actions per incident and you have enough to keep your IT team busy all day long!&lt;/p&gt;</description>
    </item>
    <item>
      <title>A New Chapter: SD-Routing&#39;s Revolution in Network Management</title>
      <link>http://localhost:1313/a-new-chapter-sd-routings-revolution-in-network-management/</link>
      <pubDate>Sat, 24 Feb 2024 12:06:47 +0000</pubDate>
      <guid>http://localhost:1313/a-new-chapter-sd-routings-revolution-in-network-management/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Software Defined Networks (SDNs) came with the promise of simplifying network management, enabling network teams to automate and adopt a programmatic approach. Cisco created solutions like - Catalyst Center, ACI, Meraki and &lt;em&gt;Viptela SD-WAN&lt;/em&gt;. The latter introduced new controllers that changed the rules that dictate how the network operates.&lt;/p&gt;
&lt;p&gt;Organization that were not ready to take the full SD-WAN leap, while still desiring the benefits of SDN principles had limited options, such as integrating with third-party systems or relying on Catalyst Center. While these solutions addressed some challenges, a significant gap remained unfilled until&amp;hellip; SD-Routing!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simplifying AAR: 3/3 Fallback to best path</title>
      <link>http://localhost:1313/simplifying-aar-3-3-fallback-to-best-path/</link>
      <pubDate>Sun, 11 Feb 2024 12:11:06 +0000</pubDate>
      <guid>http://localhost:1313/simplifying-aar-3-3-fallback-to-best-path/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;For the final post of this series, let&amp;rsquo;s explore the remaining option to handle traffic when SLA is not met: &lt;em&gt;Fallback to best path&lt;/em&gt;. It was introduced on 20.5/17.5 and it provides more flexibility and enhanced path selection compared to the other options. Let&amp;rsquo;s understand why it was created.&lt;/p&gt;
&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;With the &lt;a href=&#34;http://localhost:1313/demystifying-aar-understanding-different-scenarios/&#34;&gt;previous methods&lt;/a&gt;, traffic would either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be dropped - Rarely used, specific use cases that apply to a small amount of environments.&lt;/li&gt;
&lt;li&gt;Be load balanced on the available paths - Widely used, however traffic could be using the worst performing path.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Take the following example&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simplifying AAR:  1/3 The Foundations</title>
      <link>http://localhost:1313/demystifying-aar-1-3-the-foundations/</link>
      <pubDate>Wed, 07 Feb 2024 16:25:27 +0000</pubDate>
      <guid>http://localhost:1313/demystifying-aar-1-3-the-foundations/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Think about routing technologies out there, most of them got really good at reacting to link failures and power outages with protocols like OSPF LFA/FRR, EIGRP feasible successor, BGP PIC, etc. However, they fall short when it comes to addressing issues like network performance degradation during brownouts caused by factors such as power fluctuations or link congestion. These scenarios introduce new challenges for which traditional routing protocols lack adequate tools. This is where Application Aware Routing comes to save the day.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Simplifying AAR: 2/3 Understanding different scenarios</title>
      <link>http://localhost:1313/demystifying-aar-understanding-different-scenarios/</link>
      <pubDate>Thu, 01 Feb 2024 20:27:37 +0000</pubDate>
      <guid>http://localhost:1313/demystifying-aar-understanding-different-scenarios/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;
&lt;p&gt;Welcome back to the second installment of my series on Application Aware Routing (AAR). In my &lt;a href=&#34;http://localhost:1313/demystifying-aar-1-3-the-foundations/&#34;&gt;previous post&lt;/a&gt;, we discussed the essential concepts of Bidirectional Forwarding Detection (BFD) and Service Level Agreements (SLAs), laying the foundation for understanding how AAR optimizes network performance based on application requirements. We also briefly touched on tha AAR configuration with a simple example.&lt;/p&gt;
&lt;p&gt;Now, we continue by digging deeper on different AAR configurations, more specifically we will concentrate on &lt;em&gt;Strict/Drop&lt;/em&gt; and &lt;em&gt;Backup SLA Preferred Color&lt;/em&gt; behaviors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What On Earth Is Happening On The Network? NWPI!</title>
      <link>http://localhost:1313/network-wide-path-insights-an-introduction/</link>
      <pubDate>Thu, 25 Jan 2024 20:34:14 +0000</pubDate>
      <guid>http://localhost:1313/network-wide-path-insights-an-introduction/</guid>
      <description>&lt;h3 id=&#34;motivation-the-typical-crisis-scenario&#34;&gt;&lt;strong&gt;Motivation:&lt;/strong&gt; &lt;strong&gt;The typical crisis scenario&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Imagine starting your day in the networking team, only to be bombarded with complaints about the main internal application being down. You start investigating. Where is the problem located? Is it isolated or affecting multiple places? When did the problem start? What is the impact?&lt;/p&gt;
&lt;p&gt;Next, you get someone to help you verify the basics. DHCP and DNS work. Gateway is reachable. Connectivity to other targets on the same DC is intermittent! It is starting to get weird&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CI Tools</title>
      <link>http://localhost:1313/ci-tools/</link>
      <pubDate>Thu, 18 Jan 2024 19:46:23 +0000</pubDate>
      <guid>http://localhost:1313/ci-tools/</guid>
      <description>&lt;h2 id=&#34;describe-characteristics-and-concepts-of-build-deploy-tools-such-as-jenkins-drone-or-travis-ci&#34;&gt;Describe characteristics and concepts of build /deploy tools such as Jenkins, Drone, or Travis CI&lt;/h2&gt;
&lt;p&gt;In the &lt;a href=&#34;http://localhost:1313/devops-ci-cd-pipeline/&#34;&gt;last post&lt;/a&gt; we talked about the concepts of CI/CD, emphasizing the importance of the &lt;strong&gt;&lt;em&gt;build&lt;/em&gt;&lt;/strong&gt; phase as part of Continuous Integration process. It is now time to dig deeper on the following CI tools: Jenkins, Drone, Travis and GitLab.&lt;/p&gt;
&lt;h3 id=&#34;jenkins&#34;&gt;Jenkins&lt;/h3&gt;
&lt;p&gt;Jenkins is a &lt;strong&gt;&lt;em&gt;free&lt;/em&gt;&lt;/strong&gt; automation server (open source) designed to automate parts of the software development process, most notably the building, testing, and deployment of code changes. It is Java based, has a large community and has been out there for a while.&lt;/p&gt;</description>
    </item>
    <item>
      <title>1.0 CI/CD Pipeline</title>
      <link>http://localhost:1313/devops-ci-cd-pipeline/</link>
      <pubDate>Wed, 17 Jan 2024 12:12:31 +0000</pubDate>
      <guid>http://localhost:1313/devops-ci-cd-pipeline/</guid>
      <description>&lt;h3 id=&#34;cicd-concepts&#34;&gt;CI/CD concepts&lt;/h3&gt;
&lt;p&gt;Continuous Integration/continuous delivery/deployment is a methodology to develop solutions. The idea is to automate as much as possible to move quickly and optimize the development process. The NetDevOps pipeline includes a building phase which we are going to focus on to better understand the concept of Continuous Integration.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; src=&#34;http://localhost:1313/wp-content/uploads/2024/01/Screenshot-2024-01-18-at-18.45.53.png&#34;&gt;NetDevOps pipeline&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;Continuous Integration (CI)&lt;/strong&gt;, a crucial idea is the frequent uploading of code into the code base, often multiple times a day. This involves the constant merging of developer work with the code base, and the early identification of issues through the use of testing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DEVNET DevOps (300-910) - Blueprint</title>
      <link>http://localhost:1313/study-devops-blueprint/</link>
      <pubDate>Wed, 10 Jan 2024 18:46:45 +0000</pubDate>
      <guid>http://localhost:1313/study-devops-blueprint/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://localhost:1313/devops-ci-cd-pipeline/&#34;&gt;20% 1.0 CI/CD Pipeline&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/ci-tools/&#34;&gt;1.1 Describe characteristics and concepts of build /deploy tools such as Jenkins, Drone, or Travis CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.2 Identify the sequence, components, and integrations to implement a CI/CD pipeline for a given scenario&lt;/li&gt;
&lt;li&gt;1.3 Troubleshoot issues with a CI/CD pipeline such as code-based failures, pipeline issues, and tool incompatibility&lt;/li&gt;
&lt;li&gt;1.4 Identify tests to integrate into a CI/CD pipeline for a given scenario&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://localhost:1313/ci-cd-deployment-strategies/&#34;&gt;1.5 Identify release deployment strategy (canary, rollbacks, and blue/green) for a given scenario&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;1.6 Diagnose code dependency management issues including API, tool chain, and libraries&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;15% 2.0 Packaging and Delivery of Applications&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
